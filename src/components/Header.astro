---
import { createClient } from '@sanity/client'
import imageUrlBuilder from '@sanity/image-url'

// Initialize Sanity client
const client = createClient({
  projectId: 'scegyxg7',
  dataset: 'production',
  apiVersion: '2023-05-03',
  useCdn: true
})

// Initialize image URL builder
const builder = imageUrlBuilder(client)
function urlFor(source: any) {
  return builder.image(source)
}

// Fetch header data from Sanity
const headerData = await client.fetch(`*[_type == "header"][0]`)

// Default navigation items if none are found in Sanity
const defaultNavItems = [
  { text: 'Home', url: '/' },
  { text: 'About', url: '/about' },
  { text: 'Blog', url: '/blog' },
  { text: 'Contact', url: '/contact' }
]

// Use data from Sanity or fallback to defaults
const siteTitle = headerData?.title || 'Spirit of Psyche'
const navItems = headerData?.navigation?.length > 0 
  ? headerData.navigation 
  : defaultNavItems
---

<header class="fixed top-0 left-0 w-full z-50 bg-white/90 backdrop-blur-sm shadow-sm transition-all duration-300">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center py-4">
      <!-- Logo -->
      <div class="flex items-center">
        {headerData?.logo ? (
          <a href="/" class="flex items-center group">
            <img 
              src={urlFor(headerData.logo).width(250).url()} 
              alt={siteTitle}
              class="h-12 md:h-16 mr-3 transition-transform duration-300 group-hover:scale-105" 
            />
          </a>
        ) : (
          <a href="/" class="group">
            <h1 class="text-2xl md:text-3xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent transition-all duration-300 group-hover:from-purple-600 group-hover:to-indigo-600">
              {siteTitle}
            </h1>
          </a>
        )}
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:block">
        <ul class="flex space-x-8">
          {navItems.map((item: { text: string; url: string }) => (
            <li>
              <a 
                href={item.url} 
                class="text-gray-700 font-medium relative py-2 hover:text-indigo-600 transition-colors duration-300 after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0 after:bg-indigo-600 after:transition-all hover:after:w-full"
              >
                {item.text}
              </a>
            </li>
          ))}
        </ul>
      </nav>

      <!-- Mobile menu button -->
      <button id="mobile-menu-button" class="md:hidden flex items-center" aria-label="Open menu">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Navigation -->
  <div id="mobile-menu" class="hidden md:hidden bg-white shadow-lg">
    <div class="container mx-auto px-4 py-4">
      <ul class="space-y-4">
        {navItems.map((item: { text: string; url: string }) => (
          <li>
            <a 
              href={item.url} 
              class="block text-gray-700 font-medium py-2 hover:text-indigo-600 transition-colors duration-300"
            >
              {item.text}
            </a>
          </li>
        ))}
      </ul>
    </div>
  </div>
</header>

<!-- Spacer to prevent content from hiding behind fixed header -->
<div class="h-20 md:h-24"></div>

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
    }
    
    // Hide header on scroll down, show on scroll up
    let lastScrollTop = 0;
    const header = document.querySelector('header');
    
    window.addEventListener('scroll', () => {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      
      if (scrollTop > lastScrollTop && scrollTop > 100) {
        // Scroll down
        header?.classList.add('-translate-y-full');
      } else {
        // Scroll up
        header?.classList.remove('-translate-y-full');
      }
      
      lastScrollTop = scrollTop;
    });
  });
</script>

<style>
  /* Smooth transition for header hide/show */
  header {
    transform: translateY(0);
    transition: transform 0.3s ease;
  }
  
  header.-translate-y-full {
    transform: translateY(-100%);
  }
</style>