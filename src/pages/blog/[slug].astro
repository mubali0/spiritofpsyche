---
import { createClient } from '@sanity/client'
import imageUrlBuilder from '@sanity/image-url'
import { PortableText } from '@portabletext/react'
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const client = createClient({
    projectId: 'scegyxg7',
    dataset: 'production',
    apiVersion: '2023-05-03',
    useCdn: true
  })
  
  const posts = await client.fetch(`
    *[_type == "post"] {
      slug
    }
  `)
  
  return posts.map((post: { slug: { current: string } }) => ({
    params: { slug: post.slug.current }
  }))
}

const { slug } = Astro.params

const client = createClient({
  projectId: 'scegyxg7',
  dataset: 'production',
  apiVersion: '2023-05-03',
  useCdn: true
})

const builder = imageUrlBuilder(client)
function urlFor(source: any) {
  return builder.image(source)
}

// Fetch the current post and also get recommended posts
const post = await client.fetch(`
  *[_type == "post" && slug.current == $slug][0] {
    _id,
    title,
    slug,
    publishedAt,
    description,
    image,
    tags,
    body,
    "author": author->{name, image, bio}
  }
`, { slug })

// Fetch recommended posts (excluding current post)
const recommendedPosts = await client.fetch(`
  *[_type == "post" && slug.current != $slug] | order(publishedAt desc)[0...3] {
    _id,
    title,
    slug,
    publishedAt,
    description,
    image,
    tags
  }
`, { slug })

if (!post) {
  return Astro.redirect('/404')
}
---

<Layout>
  <div class="max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8 animate-fade-in">
    <div class="mb-8">
      <a href="/blog" class="inline-flex items-center text-sm font-medium text-indigo-600 hover:text-indigo-800 transition-colors duration-200 group">
        <svg class="w-4 h-4 mr-1 transform transition-transform duration-300 group-hover:-translate-x-1" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
        </svg>
        Back to all articles
      </a>
    </div>
    
    <div class="flex flex-col lg:flex-row gap-8">
      <!-- Main content -->
      <article class="bg-white rounded-2xl shadow-sm overflow-hidden lg:w-2/3">
        {post.image && (
          <div class="relative h-72 sm:h-96 overflow-hidden">
            <img 
              src={urlFor(post.image).width(1200).height(600).url()} 
              alt={post.title}
              class="w-full h-full object-cover" 
            />
            <div class="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
            <div class="absolute bottom-0 left-0 right-0 p-6 text-white">
              {post.tags && post.tags.length > 0 && (
                <div class="flex flex-wrap gap-2 mb-4">
                  {post.tags.map((tag: string) => (
                    <span class="text-xs font-medium px-2.5 py-0.5 rounded-full bg-white/20 backdrop-blur-sm">
                      {tag}
                    </span>
                  ))}
                </div>
              )}
              <h1 class="text-3xl sm:text-4xl md:text-5xl font-bold text-white mb-2">{post.title}</h1>
              <div class="flex items-center text-white/80 text-sm">
                <time datetime={post.publishedAt}>
                  {new Date(post.publishedAt).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </time>
                {post.author && (
                  <span class="flex items-center ml-4">
                    <span class="mx-2">â€¢</span>
                    {post.author.image && (
                      <img 
                        src={urlFor(post.author.image).width(40).height(40).url()} 
                        alt={post.author.name}
                        class="w-6 h-6 rounded-full mr-2 border border-white/30" 
                      />
                    )}
                    <span>{post.author.name}</span>
                  </span>
                )}
              </div>
            </div>
          </div>
        )}
        
        <div class="p-6 sm:p-8 md:p-10">
          {!post.image && (
            <>
              <h1 class="text-3xl sm:text-4xl font-bold text-gray-900 mb-4">{post.title}</h1>
              <div class="flex flex-wrap items-center text-gray-500 mb-8">
                <time datetime={post.publishedAt} class="text-sm">
                  {new Date(post.publishedAt).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </time>
                
                {post.tags && post.tags.length > 0 && (
                  <div class="flex flex-wrap ml-4 gap-2">
                    {post.tags.map((tag: string) => (
                      <span class="text-xs font-medium px-2.5 py-0.5 rounded-full bg-indigo-50 text-indigo-700">
                        {tag}
                      </span>
                    ))}
                  </div>
                )}
              </div>
            </>
          )}
          
          {post.description && (
            <div class="text-xl text-gray-600 mb-8 font-light leading-relaxed border-l-4 border-indigo-100 pl-4 italic">
              {post.description}
            </div>
          )}
          
          <div class="prose prose-lg max-w-none prose-headings:font-bold prose-headings:text-gray-900 prose-p:text-gray-600 prose-a:text-indigo-600 prose-a:no-underline hover:prose-a:text-indigo-800 prose-img:rounded-xl">
            <PortableText value={post.body} />
          </div>
          
          {post.author && post.author.bio && (
            <div class="mt-12 pt-8 border-t border-gray-100">
              <div class="flex flex-col sm:flex-row items-center sm:items-start gap-4">
                {post.author.image && (
                  <img 
                    src={urlFor(post.author.image).width(80).height(80).url()} 
                    alt={post.author.name}
                    class="w-16 h-16 rounded-full" 
                  />
                )}
                <div>
                  <h3 class="text-lg font-semibold mb-2">About the author</h3>
                  <p class="text-gray-600">{post.author.bio}</p>
                </div>
              </div>
            </div>
          )}
        </div>
      </article>
      
      <!-- Recommended posts sidebar -->
      <aside class="lg:w-1/3">
        <div class="bg-white rounded-2xl shadow-sm overflow-hidden sticky top-8">
          <div class="p-6">
            <h2 class="text-xl font-bold text-gray-900 mb-6 relative inline-block">
              Recommended Articles
              <span class="absolute -bottom-2 left-0 w-16 h-1 bg-indigo-600 rounded-full"></span>
            </h2>
            
            <div class="space-y-6">
              {recommendedPosts.map((recPost: any) => (
                <div class="flex flex-col sm:flex-row lg:flex-col gap-4 group">
                  <div class="sm:w-1/3 lg:w-full h-24 sm:h-20 lg:h-32 rounded-lg overflow-hidden">
                    {recPost.image ? (
                      <img 
                        src={urlFor(recPost.image).width(400).height(240).url()} 
                        alt={recPost.title}
                        class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105" 
                        loading="lazy"
                      />
                    ) : (
                      <div class="w-full h-full bg-gradient-to-r from-indigo-50 to-purple-50 flex items-center justify-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-indigo-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1M19 20a2 2 0 002-2V8a2 2 0 00-2-2h-5M8 12h8M8 16h4" />
                        </svg>
                      </div>
                    )}
                  </div>
                  <div class="sm:w-2/3 lg:w-full">
                    <h3 class="text-base font-semibold mb-1 line-clamp-2 group-hover:text-indigo-600 transition-colors duration-200">
                      <a href={`/blog/${recPost.slug.current}/`}>
                        {recPost.title}
                      </a>
                    </h3>
                    <time datetime={recPost.publishedAt} class="text-xs text-gray-500">
                      {new Date(recPost.publishedAt).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'short',
                        day: 'numeric'
                      })}
                    </time>
                  </div>
                </div>
              ))}
            </div>
            
            <div class="mt-8 pt-6 border-t border-gray-100">
              <a 
                href="/blog" 
                class="inline-flex items-center w-full justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 transition-colors duration-300"
              >
                View all articles
              </a>
            </div>
          </div>
        </div>
      </aside>
    </div>
  </div>
</Layout>

<style>
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .animate-fade-in {
    animation: fadeIn 0.8s ease-out forwards;
  }
</style>